function Task(e,t,s){this.id=e,this.description=t,this.completed=s}let tasks=[];function addTask(e){const t=Date.now(),s=new Task(t,e,!1);tasks.push(s),saveTasks(),renderTasks();animateTask(document.getElementById(`task-${t}`),"add")}function toggleCompletion(e){const t=tasks.findIndex((t=>t.id===e));-1!==t&&(tasks[t].completed=!tasks[t].completed,saveTasks(),renderTasks())}function moveTaskUp(e){const t=tasks.findIndex((t=>t.id===e));if(t>0){const s=document.getElementById(`task-${e}`),n=document.getElementById(`task-${tasks[t-1].id}`);animateTask(s,"up"),animateTask(n,"down"),setTimeout((()=>{const[e]=tasks.splice(t,1);tasks.splice(t-1,0,e),saveTasks(),updateTaskList()}),300)}}function moveTaskDown(e){const t=tasks.findIndex((t=>t.id===e));if(t<tasks.length-1){const s=document.getElementById(`task-${e}`),n=document.getElementById(`task-${tasks[t+1].id}`);animateTask(s,"down"),animateTask(n,"up"),setTimeout((()=>{const[e]=tasks.splice(t,1);tasks.splice(t+1,0,e),saveTasks(),updateTaskList()}),300)}}function editTask(e,t){const s=tasks.findIndex((t=>t.id===e));-1!==s&&""!==t.trim()&&(tasks[s].description=t,saveTasks(),renderTasks())}function deleteTask(e){animateTask(document.getElementById(`task-${e}`),"delete"),setTimeout((()=>{tasks=tasks.filter((t=>t.id!==e)),saveTasks(),updateTaskList()}),300)}function saveTasks(){localStorage.setItem("tasks",JSON.stringify(tasks))}function loadTasks(){const e=localStorage.getItem("tasks");return e?JSON.parse(e):[]}function createTaskElement(e){const t=document.createElement("li");t.id=`task-${e.id}`,t.classList.add("task");const s=document.createElement("input");s.id=`check-${e.id}`,s.type="checkbox",s.checked=e.completed,s.addEventListener("change",(()=>toggleCompletion(e.id))),t.appendChild(s);const n=document.createElement("p");n.textContent=e.description,e.completed&&n.classList.add("description"),t.appendChild(n);const a=document.createElement("input");a.id=`edit-${e.id}`,a.type="text",a.value=e.description,a.classList.add("edit-input"),a.style.display="none",n.style.display="inline-block",a.addEventListener("keydown",(t=>{if("Enter"===t.key){const t=a.value.trim();""!==t?editTask(e.id,t):(alert("Task description cannot be empty."),a.value=e.description)}})),t.appendChild(a);const i=document.createElement("div");return i.classList.add("task-menu"),i.innerHTML=`\n    <input class="menu-input" type="checkbox" id="menu-${e.id}" />\n    <label class="menu-label" for="menu-${e.id}">•••</label>\n    <ul class="menu-list">\n      <li onclick="moveTaskUp(${e.id})">Up Task</li>\n      <li onclick="editTask(${e.id})">Edit Task</li>\n      <li onclick="moveTaskDown(${e.id})">Down Task</li>\n      <li onclick="deleteTask(${e.id})">Delete Task</li>\n    </ul>\n  `,t.appendChild(i),n.addEventListener("dblclick",(()=>{n.style.display="none",a.style.display="inline-block",a.focus()})),a.addEventListener("keydown",(t=>{if("Enter"===t.key){const t=a.value.trim();""!==t?editTask(e.id,t):(alert("Task description cannot be empty."),a.value=e.description)}})),a.addEventListener("blur",(()=>{const t=a.value.trim();""!==t?editTask(e.id,t):(alert("Task description cannot be empty."),a.value=e.description),a.style.display="none",n.style.display="inline-block"})),t}function renderTasks(){const e=document.getElementById("taskList"),t=document.createDocumentFragment();if(0===tasks.length){const e=document.createElement("li");e.classList.add("card"),e.innerHTML='\n      <h2>No Tasks to Display</h2>\n      <img src="./assets/img/undraw_to_do_re_jaef.svg" loading="lazy" />\n      <p>It looks like your todo list is empty right now.\n        Take a moment to relax, or start adding tasks to stay productive!\n      </p>\n    ',t.appendChild(e)}else tasks.forEach((e=>{const s=createTaskElement(e);t.appendChild(s)}));e.innerHTML="",e.appendChild(t)}function updateTaskList(){renderTasks()}function animateTask(e,t){e.classList.add(t),setTimeout((()=>{e.classList.remove(t)}),300)}document.addEventListener("DOMContentLoaded",(()=>{tasks=loadTasks(),renderTasks()}));const taskInputButton=document.getElementById("taskInputButton"),taskForm=document.getElementById("taskForm");taskInputButton.addEventListener("click",(()=>{taskForm.style.display="none"===taskForm.style.display?"block":"none",taskForm.style.animation="fadeIn 0.3s ease-in-out",document.getElementById("taskInput").focus()})),taskForm.addEventListener("submit",(e=>{e.preventDefault(),taskForm.style.display="none";const t=document.getElementById("taskInput"),s=t.value.trim();""!==s?(addTask(s),t.value=""):alert("Please enter a valid task description.")}));const searchInput=document.getElementById("searchInput");let debounceTimeout;searchInput.addEventListener("input",(function(){clearTimeout(debounceTimeout),debounceTimeout=setTimeout((()=>{const e=searchInput.value.trim().toLowerCase();displayTasks(tasks.filter((t=>t.description.toLowerCase().includes(e))))}),300)}));const searchInputButton=document.getElementById("searchInputButton"),searchForm=document.getElementById("searchForm");function displayTasks(e){const t=document.getElementById("taskList"),s=document.createDocumentFragment();if(0===e.length){const e=document.createElement("li");e.classList.add("card"),e.innerHTML='\n      <h2>No Results Found</h2>\n      <img src="./assets/img/undraw_not_found_re_bh2e.svg" loading="lazy"/>\n      <p>Oops! It seems like there are no tasks matching your search criteria. But don\'t worry, you can easily add new tasks to your to-do list or try refining your search to find what you\'re looking for.</p>\n    ',s.appendChild(e)}else e.forEach((e=>{const t=createTaskElement(e);s.appendChild(t)}));t.innerHTML="",t.appendChild(s)}searchInputButton.addEventListener("click",(()=>{searchForm.style.display="none"===searchForm.style.display?"block":"none",searchForm.style.animation="fadeIn 0.3s ease-in-out",document.getElementById("searchInput").focus()})),searchForm.addEventListener("submit",(e=>{e.preventDefault(),searchForm.style.display="none"})),displayTasks(tasks);